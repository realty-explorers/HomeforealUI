version: "3.9"
services:
  rabbit:
    image: "rabbitmq:management-alpine"
    ports:
      - "5672:5672"
      - "15672:15672"
  deals:
    image: "ghcr.io/sharonfabin/deals-service"
    ports:
      - "9001:9001"
    env_file:
      - deals.env
    volumes:
      - ./security/certbot/conf/:/etc/nginx/ssl/:ro
      - elastic-certs:/etc/elastic/certs/:ro
    networks:
      - esnet
  ui:
    image: "ghcr.io/sharonfabin/ui"
    ports:
      - "3000:3000"
    env_file:
      - ui.env
  elastic_setup:
    image: "docker.elastic.co/elasticsearch/elasticsearch:8.6.2"
    command: >
      bash -c '
        if [ ! -f config/certs/ca.zip ]; then
                  echo "Creating CA";
                  bin/elasticsearch-certutil ca --silent --pem -out config/certs/ca.zip;
                  unzip config/certs/ca.zip -d config/certs;
                fi;
                if [ ! -f config/certs/certs.zip ]; then
                  echo "Creating certs";
                  echo -ne \
                  "instances:\n"\
                  "  - name: esnode1\n"\
                  "    dns:\n"\
                  "      - esnode1\n"\
                  "      - localhost\n"\
                  "    ip:\n"\
                  "      - 127.0.0.1\n"\
                  > config/certs/instances.yml;
                  bin/elasticsearch-certutil cert --silent --pem -out config/certs/certs.zip --in config/certs/instances.yml --ca-cert config/certs/ca/ca.crt --ca-key config/certs/ca/ca.key;
                  unzip config/certs/certs.zip -d config/certs;
                fi;
                echo "Setting file permissions"
                chown -R root:root config/certs;
                find . -type d -exec chmod 750 \{\} \;;
                find . -type f -exec chmod 640 \{\} \;;
                echo "Good to go!";
            '
    volumes:
      - ./elastic-certs:/usr/share/elasticsearch/config/certs
    networks:
      - esnet
  esnode1:
    image: "docker.elastic.co/elasticsearch/elasticsearch:8.6.2"
    ports:
      - "9200:9200"
      - "9300:9300"
    env_file:
      - elastic.env
    restart: unless-stopped
    volumes:
      - esnode1-data:/usr/share/elasticsearch/data
      - elastic-certs:/usr/share/elasticsearch/config/certs
    mem_limit: 1g
    networks:
      - esnet
    depends_on:
      - elastic_setup
  kibana:
    depends_on:
      - esnode1
    image: "docker.elastic.co/kibana/kibana:8.6.2"
    volumes:
      - elastic-certs:/usr/share/kibana/config/certs
      - kibana-data:/usr/share/kibana/data
    ports:
      - 5601:5601
    env_file:
      - kibana.env
    networks:
      - esnet
  nginx:
    image: "nginx:latest"
    ports:
      - "80:80"
      - "443:443"
    restart: always
    volumes:
      - ./nginx/conf/:/etc/nginx/conf.d:ro
      - ./security/certbot/www:/var/www/certbot/:ro
      - ./security/certbot/conf/:/etc/nginx/ssl/:ro
  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./security/certbot/www/:/var/www/certbot/:rw
      - ./security/certbot/conf/:/etc/letsencrypt/:rw
networks:
  esnet:
volumes:
  elastic-certs:
  esnode1-data:
    driver: local
  kibana-data:
    driver: local
