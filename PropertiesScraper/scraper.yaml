openapi: 3.0.3
info:
  title: Scraper API
  version: 1.0.0
servers:
  - url: http://localhost:3000/api/v1
tags:
  - name: Deals
    description: Property Scraper
  - name: Location
    description: Location Scraper
    
paths:
  /deals/findProperties:
    post:
      tags:
        - Deals
      summary: Scrape Properties
      description: Scrape Properties
      operationId: scrapeProperties
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchInfo'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Property'
  /deals/findDeals:
    post:
      tags:
        - Deals
      summary: Find property deals
      description: Find property deals
      operationId: findDeals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DealsInfo'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deal'
  /location/suggest:
    get:
      tags:
        - Location
      summary: Get location suggestions
      description: Get location suggestions
      operationId: getSuggestion
      parameters:
        - name: locationDisplay
          in: query
          description: location to get suggestions that are based on it
          required: true
          schema:
            type: string
            example: 'Homewoo'
      responses:
        '200':
          description: successful operation
  /location/data:
    get:
      tags:
        - Location
      summary: Get location data
      description: Get location data
      operationId: getData
      parameters:
        - name: dispaly
          in: query
          description: location display
          required: true
          schema:
            type: string
          examples: 
            address: 
              value: '1053 Sunset Blvd, Birmingham, AL 35213'
            city:
              value: 'Homewood, AL'
        - name: type
          in: query
          description: region type (neighborhodd, city, etc)
          required: true
          schema:
            type: string
          examples: 
            address: 
              value: 'address'
            city:
              value: 'city'
        - name: city
          in: query
          description: city name
          required: true
          schema:
            type: string
          example: 'Homewood'
        - name: state
          in: query
          description: state name
          required: true
          schema:
            type: string
          example: 'alabama'
      responses:
        '200':
          description: successful operation
components:
  schemas:
    SearchInfo:
      type: object
      properties:
        city:
          type: string
          example: 'Homewood'
        state:
          type: string
          example: 'alabama'
        display:
          type: string
          example: 'Homewood, AL'
        type:
          type: string
          example: 'city'
    Property:
      type: object
      properties:
        id:
          type: string
        forSale:
          type: boolean
        primaryImage:
          type: string
        images:
          type: array
          items:
            type: string
        price:
          type: number
        soldPrice:
          type: number
        address:
          type: string
        street:
          type: string
        neighborhood:
          type: string
        city:
          type: string
        state:
          type: string
        zipCode:
          type: number
        type:
          type: string
        beds:
          type: number
        baths:
          type: number
        area:
          type: number
        latitude:
          type: number
        longitude:
          type: number
        listingDate:
          type: string
        soldDate:
          type: string
    DealsInfo:
      type: object
      properties:
        buyBox: 
          $ref: '#/components/schemas/BuyBox'
    BuyBox:
      type: object
      properties:
        location:
          type: string
        compsMaxDistance:
          type: number
        underComps:
          type: number
        minArv:
          type: number
        maxArv:
          type: number
        minPrice:
          type: number
        maxPrice:
          type: number
        onSaleDays:
          type: number
        onSoldDays:
          type: number
        forSaleMinArea:
          type: number
        forSaleMaxArea:
          type: number
        soldMinArea:
          type: number
        soldMaxArea:
          type: number
        minBeds:
          type: number
        maxBeds:
          type: number
        minBaths:
          type: number
        maxBaths:
          type: number
        propertyTypes:
          type: array
          items:
            type: string
            example: 'single_family'
    Deal:
      type: object
      properties:
        profit:
          type: number
        trueArv:
          type: number
        estimatedArv:
          type: number
        distance:
          type: number
        property:
          $ref: '#/components/schemas/Property'
        soldProperties:
          type: array
          items:
            $ref: '#/components/schemas/CompsProperty'
        trueArvProperties:
          type: array
          items:
            $ref: '#/components/schemas/CompsProperty'
    CompsProperty:
      type: object
      properties:
        property: 
          $ref: '#/components/schemas/Property'
        distance:
          type: number
    
  